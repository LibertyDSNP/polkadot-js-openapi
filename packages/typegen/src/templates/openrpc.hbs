{
  "openrpc": "1.2.6",
  "info": {
    "version": "1.0.0",
    "title": "Frequency API"
  },
  "methods": [
{{#each allMethods}}
    {
      "name": "{{palletName}}/{{method.name}}",
      "description": "{{description}}",
      "params": [
{{#each method.params}}
        {
          "name": "{{name}}",
          "description": "",
          "required": {{required}},
          "schema": {{{type}}}
        }{{#unless @last}},{{/unless}}
{{/each}}
      ],
      "result": {
        "name": "{{palletName}}/{{method.name}}",
        "schema": {
          "type": "object",
          "properties": {
            "transactionHash": {
              "type": "string"
            },
            "blockNumber": {
              "type": "integer"
            },
            "blockHash": {
              "type": "string"
            }
          }
        }
      }
    }{{#unless @last}},{{/unless}}
{{/each}}
  ],
  "components": {
    "schemas": {
      "AccountId32": {
        "title": "AccountId32",
        "description": "A 32-byte encoded account identifier used to identify accounts on the Polkadot network",
        "type": "string",
        "pattern": "^[a-fA-F0-9]{64}$"
      },
      "Bytes": {
        "title": "bytes",
        "description": "Hex representation of a variable length byte array",
        "type": "string",
        "pattern": "^0x([a-fA-F0-9]?)+$"
      },
      "Call": {
        "title": "Call",
        "description": "",
        "type": "string"
      },
      "CommonPrimitivesSchemaModelType": {
        "title": "CommonPrimitivesSchemaModelType",
        "description": "The schema model type",
        "type": "string",
        "name": "ModelType",
        "enum": [
          "AvroBinary", "Parquet"
        ]
      },
      "CommonPrimitivesSchemaPayloadLocation": {
        "title": "CommonPrimitivesSchemaPayloadLocation",
        "description": "The schema payload location",
        "type": "string",
        "name": "PayloadLocation",
        "enum": [
         "OnChain", "IPFS"
        ]
      },
      "CumulusPrimitivesParachainInherentParachainInherentData": {
        "title": "CumulusPrimitivesParachainInherentParachainInherentData",
        "description": "",
        "type": "object",
        "properties": {
          "validation_data": {
            "$ref": "PersistedValidationData"
          },
          "relay_chain_state": {
            "$ref": "sp_trie_StorageProof"
          },
          "downward_messages": {
            "type": "array",
            "items": {
              "$ref": "InboundDownwardMessage"
            }
          },
          "horizontal_messages": {
            "type": "object",
            "name": "BTreeMap",
            "properties": {
              "key": { "$ref": "ParaId"},
              "value": { "$ref": "InboundHrmpMessage"}
            }
          }
        }
      },
      "H256": {
        "title": "H256",
        "description": "H256 represents a 256-bit hash value",
        "type": "string",
        "pattern": "^0x[a-fA-F\\d]{64}$"
      },
      "FrameSupportScheduleMaybeHashed": {
        "title": "FrameSupportScheduleMaybeHashed",
        "description": "Type representing an encodable value or the hash of the encoding of such a value.",
        "type": "string",
        "name": "MaybeHashed",
        "emum": [
          "Value", "Hash"
        ]
      },
      "FrequencyRuntimeOriginCaller": {
        "title": "FrequencyRuntimeOriginCaller",
        "description": "",
        "type": "string"
      },
      "FrequencyRuntimeSessionKeys": {
        "title": "FrequencyRuntimeSessionKeys",
        "description": "",
        "type": "string"
      },
      "MultiAddress": {
        "title": "MultiAddress",
        "description": "Represents addresses on multiple different blockchain networks",
        "type": "object",
        "properties": {
          "protocol": {
           "type": "string"
          },
          "address": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9]{32,34}$"
          }
        },
        "required": ["protocol", "address"]
      },
      "OrmlVestingVestingSchedule": {
        "title": "OrmlVestingVestingSchedule",
        "description": "",
        "type": "string"
      },
      "PalletDemocracyConviction": {
        "title": "PalletDemocracyConviction",
        "description": "",
        "type": "string"
      },
      "PalletDemocracyVoteAccountVote": {
        "title": "PalletDemocracyVoteAccountVote",
        "description": "",
        "type": "string"
      },
      "PalletMsaAddKeyData": {
        "title": "PalletMsaAddKeyData",
        "description": "",
        "type": "object",
        "properties": {
          "msa_id": {
            "type": "integer"
          },
          "expiration": {
            "type": "integer"
          },
          "new_public_key": {
            "$ref": "#/components/schemas/AccountId32"
          }
        }
      },
      "PalletMsaAddProvider": {
        "title": "PalletMsaAddProvider",
        "description": "",
        "type": "object",
        "properties": {
          "authorized_msa_id": {
            "type": "integer"
          },
          "schema_ids": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "expiration": {
            "type": "integer"
          }
        },
        "required": [ "authorized_msa_id", "expiration"]
      },
      "Perbill": {
        "title": "Perbill",
        "description": "",
        "type": "string"
      },
      "SpRuntimeHeader": {
        "title": "SpRuntimeHeader",
        "description": "",
        "type": "string"
      },
      "SpRuntimeMultiSignature": {
        "title": "SpRuntimeMultiSignature",
        "description": "",
        "type": "string"
      }
    }
  }
}
