{
  "openrpc": "1.2.6",
  "info": {
    "version": "1.0.0",
    "title": "Frequency API"
  },
  "methods": [
    {
      "name": "hasKey",
      "params": [
        {
          "name": "publicKey",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Bytes"
          }
        },
        {
          "name": "keyType",
          "description": "",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "hasSessionKeys",
      "params": [
        {
          "name": "sessionKeys",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Bytes"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "insertKey",
      "params": [
        {
          "name": "keyType",
          "description": "",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "suri",
          "description": "",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "publicKey",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Bytes"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "pendingExtrinsics",
      "params": [],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "removeExtrinsic",
      "params": [
        {
          "name": "bytesOrHash",
          "description": "",
          "required": true,
          "schema": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtrinsicOrHash"
            }
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "rotateKeys",
      "params": [],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "submitAndWatchExtrinsic",
      "params": [
        {
          "name": "extrinsic",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Extrinsic"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "submitExtrinsic",
      "params": [
        {
          "name": "extrinsic",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Extrinsic"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "epochAuthorship",
      "params": [],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "getFinalizedHead",
      "params": [],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "subscribeJustifications",
      "params": [],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "getBlock",
      "params": [
        {
          "name": "hash",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/BlockHash"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "getBlockHash",
      "params": [
        {
          "name": "blockNumber",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/BlockNumber"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "getFinalizedHead",
      "params": [],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "getHeader",
      "params": [
        {
          "name": "hash",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/BlockHash"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "subscribeAllHeads",
      "params": [],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "subscribeFinalizedHeads",
      "params": [],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "subscribeNewHeads",
      "params": [],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "getKeys",
      "params": [
        {
          "name": "childKey",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/PrefixedStorageKey"
          }
        },
        {
          "name": "prefix",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/StorageKey"
          }
        },
        {
          "name": "at",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/Hash"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "getKeysPaged",
      "params": [
        {
          "name": "childKey",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/PrefixedStorageKey"
          }
        },
        {
          "name": "prefix",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/StorageKey"
          }
        },
        {
          "name": "count",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/u32"
          }
        },
        {
          "name": "startKey",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/StorageKey"
          }
        },
        {
          "name": "at",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/Hash"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "getStorage",
      "params": [
        {
          "name": "childKey",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/PrefixedStorageKey"
          }
        },
        {
          "name": "key",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/StorageKey"
          }
        },
        {
          "name": "at",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/Hash"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "getStorageEntries",
      "params": [
        {
          "name": "childKey",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/PrefixedStorageKey"
          }
        },
        {
          "name": "keys",
          "description": "",
          "required": true,
          "schema": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StorageKey"
            }
          }
        },
        {
          "name": "at",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/Hash"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "getStorageHash",
      "params": [
        {
          "name": "childKey",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/PrefixedStorageKey"
          }
        },
        {
          "name": "key",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/StorageKey"
          }
        },
        {
          "name": "at",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/Hash"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "getStorageSize",
      "params": [
        {
          "name": "childKey",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/PrefixedStorageKey"
          }
        },
        {
          "name": "key",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/StorageKey"
          }
        },
        {
          "name": "at",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/Hash"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "call",
      "params": [
        {
          "name": "callRequest",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/ContractCallRequest"
          }
        },
        {
          "name": "at",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/BlockHash"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "getStorage",
      "params": [
        {
          "name": "address",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/AccountId"
          }
        },
        {
          "name": "key",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/H256"
          }
        },
        {
          "name": "at",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/BlockHash"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "instantiate",
      "params": [
        {
          "name": "request",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/InstantiateRequestV1"
          }
        },
        {
          "name": "at",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/BlockHash"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "rentProjection",
      "params": [
        {
          "name": "address",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/AccountId"
          }
        },
        {
          "name": "at",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/BlockHash"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "uploadCode",
      "params": [
        {
          "name": "uploadRequest",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/CodeUploadRequest"
          }
        },
        {
          "name": "at",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/BlockHash"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "getBlockStats",
      "params": [
        {
          "name": "at",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Hash"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "createBlock",
      "params": [
        {
          "name": "createEmpty",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/boolean"
          }
        },
        {
          "name": "finalize",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/boolean"
          }
        },
        {
          "name": "parentHash",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/BlockHash"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "finalizeBlock",
      "params": [
        {
          "name": "hash",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/BlockHash"
          }
        },
        {
          "name": "justification",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/Justification"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "listening",
      "params": [],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "peerCount",
      "params": [],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "version",
      "params": [],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "clientVersion",
      "params": [],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "sha3",
      "params": [
        {
          "name": "data",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Bytes"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "accounts",
      "params": [],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "blockNumber",
      "params": [],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "call",
      "params": [
        {
          "name": "request",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/EthCallRequest"
          }
        },
        {
          "name": "number",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/BlockNumber"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "chainId",
      "params": [],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "coinbase",
      "params": [],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "estimateGas",
      "params": [
        {
          "name": "request",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/EthCallRequest"
          }
        },
        {
          "name": "number",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/BlockNumber"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "feeHistory",
      "params": [
        {
          "name": "blockCount",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/U256"
          }
        },
        {
          "name": "newestBlock",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/BlockNumber"
          }
        },
        {
          "name": "rewardPercentiles",
          "description": "",
          "required": false,
          "schema": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/f64"
            }
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "gasPrice",
      "params": [],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "getBalance",
      "params": [
        {
          "name": "address",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/H160"
          }
        },
        {
          "name": "number",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/BlockNumber"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "getBlockByHash",
      "params": [
        {
          "name": "hash",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/H256"
          }
        },
        {
          "name": "full",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/boolean"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "getBlockByNumber",
      "params": [
        {
          "name": "block",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/BlockNumber"
          }
        },
        {
          "name": "full",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/boolean"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "getBlockTransactionCountByHash",
      "params": [
        {
          "name": "hash",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/H256"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "getBlockTransactionCountByNumber",
      "params": [
        {
          "name": "block",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/BlockNumber"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "getCode",
      "params": [
        {
          "name": "address",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/H160"
          }
        },
        {
          "name": "number",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/BlockNumber"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "getFilterChanges",
      "params": [
        {
          "name": "index",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/U256"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "getFilterLogs",
      "params": [
        {
          "name": "index",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/U256"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "getLogs",
      "params": [
        {
          "name": "filter",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/EthFilter"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "getProof",
      "params": [
        {
          "name": "address",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/H160"
          }
        },
        {
          "name": "storageKeys",
          "description": "",
          "required": true,
          "schema": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/H256"
            }
          }
        },
        {
          "name": "number",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/BlockNumber"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "getStorageAt",
      "params": [
        {
          "name": "address",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/H160"
          }
        },
        {
          "name": "index",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/U256"
          }
        },
        {
          "name": "number",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/BlockNumber"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "getTransactionByBlockHashAndIndex",
      "params": [
        {
          "name": "hash",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/H256"
          }
        },
        {
          "name": "index",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/U256"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "getTransactionByBlockNumberAndIndex",
      "params": [
        {
          "name": "number",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/BlockNumber"
          }
        },
        {
          "name": "index",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/U256"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "getTransactionByHash",
      "params": [
        {
          "name": "hash",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/H256"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "getTransactionCount",
      "params": [
        {
          "name": "hash",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/H256"
          }
        },
        {
          "name": "number",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/BlockNumber"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "getTransactionReceipt",
      "params": [
        {
          "name": "hash",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/H256"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "getUncleByBlockHashAndIndex",
      "params": [
        {
          "name": "hash",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/H256"
          }
        },
        {
          "name": "index",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/U256"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "getUncleByBlockNumberAndIndex",
      "params": [
        {
          "name": "number",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/BlockNumber"
          }
        },
        {
          "name": "index",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/U256"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "getUncleCountByBlockHash",
      "params": [
        {
          "name": "hash",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/H256"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "getUncleCountByBlockNumber",
      "params": [
        {
          "name": "number",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/BlockNumber"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "getWork",
      "params": [],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "hashrate",
      "params": [],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "maxPriorityFeePerGas",
      "params": [],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "mining",
      "params": [],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "newBlockFilter",
      "params": [],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "newFilter",
      "params": [
        {
          "name": "filter",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/EthFilter"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "newPendingTransactionFilter",
      "params": [],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "protocolVersion",
      "params": [],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "sendRawTransaction",
      "params": [
        {
          "name": "bytes",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Bytes"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "sendTransaction",
      "params": [
        {
          "name": "tx",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/EthTransactionRequest"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "submitHashrate",
      "params": [
        {
          "name": "index",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/U256"
          }
        },
        {
          "name": "hash",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/H256"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "submitWork",
      "params": [
        {
          "name": "nonce",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/H64"
          }
        },
        {
          "name": "headerHash",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/H256"
          }
        },
        {
          "name": "mixDigest",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/H256"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "subscribe",
      "params": [
        {
          "name": "kind",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/EthSubKind"
          }
        },
        {
          "name": "params",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/EthSubParams"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "syncing",
      "params": [],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "uninstallFilter",
      "params": [
        {
          "name": "index",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/U256"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "proveFinality",
      "params": [
        {
          "name": "blockNumber",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/BlockNumber"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "roundState",
      "params": [],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "subscribeJustifications",
      "params": [],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "generateBatchProof",
      "params": [
        {
          "name": "leafIndices",
          "description": "",
          "required": true,
          "schema": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/u64"
            }
          }
        },
        {
          "name": "at",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/BlockHash"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "generateProof",
      "params": [
        {
          "name": "leafIndex",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/u64"
          }
        },
        {
          "name": "at",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/BlockHash"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "localStorageGet",
      "params": [
        {
          "name": "kind",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/StorageKind"
          }
        },
        {
          "name": "key",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Bytes"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "localStorageSet",
      "params": [
        {
          "name": "kind",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/StorageKind"
          }
        },
        {
          "name": "key",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Bytes"
          }
        },
        {
          "name": "value",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Bytes"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "queryFeeDetails",
      "params": [
        {
          "name": "extrinsic",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Bytes"
          }
        },
        {
          "name": "at",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/BlockHash"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "queryInfo",
      "params": [
        {
          "name": "extrinsic",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Bytes"
          }
        },
        {
          "name": "at",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/BlockHash"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "methods",
      "params": [],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "call",
      "params": [
        {
          "name": "method",
          "description": "",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "data",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Bytes"
          }
        },
        {
          "name": "at",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/BlockHash"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "getChildKeys",
      "params": [
        {
          "name": "childStorageKey",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/StorageKey"
          }
        },
        {
          "name": "childDefinition",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/StorageKey"
          }
        },
        {
          "name": "childType",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/u32"
          }
        },
        {
          "name": "key",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/StorageKey"
          }
        },
        {
          "name": "at",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/BlockHash"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "getChildReadProof",
      "params": [
        {
          "name": "childStorageKey",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/PrefixedStorageKey"
          }
        },
        {
          "name": "keys",
          "description": "",
          "required": true,
          "schema": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StorageKey"
            }
          }
        },
        {
          "name": "at",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/BlockHash"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "getChildStorage",
      "params": [
        {
          "name": "childStorageKey",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/StorageKey"
          }
        },
        {
          "name": "childDefinition",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/StorageKey"
          }
        },
        {
          "name": "childType",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/u32"
          }
        },
        {
          "name": "key",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/StorageKey"
          }
        },
        {
          "name": "at",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/BlockHash"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "getChildStorageHash",
      "params": [
        {
          "name": "childStorageKey",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/StorageKey"
          }
        },
        {
          "name": "childDefinition",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/StorageKey"
          }
        },
        {
          "name": "childType",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/u32"
          }
        },
        {
          "name": "key",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/StorageKey"
          }
        },
        {
          "name": "at",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/BlockHash"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "getChildStorageSize",
      "params": [
        {
          "name": "childStorageKey",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/StorageKey"
          }
        },
        {
          "name": "childDefinition",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/StorageKey"
          }
        },
        {
          "name": "childType",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/u32"
          }
        },
        {
          "name": "key",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/StorageKey"
          }
        },
        {
          "name": "at",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/BlockHash"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "getKeys",
      "params": [
        {
          "name": "key",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/StorageKey"
          }
        },
        {
          "name": "at",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/BlockHash"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "getKeysPaged",
      "params": [
        {
          "name": "key",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/StorageKey"
          }
        },
        {
          "name": "count",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/u32"
          }
        },
        {
          "name": "startKey",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/StorageKey"
          }
        },
        {
          "name": "at",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/BlockHash"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "getMetadata",
      "params": [
        {
          "name": "at",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/BlockHash"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "getPairs",
      "params": [
        {
          "name": "prefix",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/StorageKey"
          }
        },
        {
          "name": "at",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/BlockHash"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "getReadProof",
      "params": [
        {
          "name": "keys",
          "description": "",
          "required": true,
          "schema": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StorageKey"
            }
          }
        },
        {
          "name": "at",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/BlockHash"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "getRuntimeVersion",
      "params": [
        {
          "name": "at",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/BlockHash"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "getStorage",
      "params": [
        {
          "name": "key",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/StorageKey"
          }
        },
        {
          "name": "at",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/BlockHash"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "getStorageHash",
      "params": [
        {
          "name": "key",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/StorageKey"
          }
        },
        {
          "name": "at",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/BlockHash"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "getStorageSize",
      "params": [
        {
          "name": "key",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/StorageKey"
          }
        },
        {
          "name": "at",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/BlockHash"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "queryStorage",
      "params": [
        {
          "name": "keys",
          "description": "",
          "required": true,
          "schema": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StorageKey"
            }
          }
        },
        {
          "name": "fromBlock",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Hash"
          }
        },
        {
          "name": "toBlock",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/BlockHash"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "queryStorageAt",
      "params": [
        {
          "name": "keys",
          "description": "",
          "required": true,
          "schema": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StorageKey"
            }
          }
        },
        {
          "name": "at",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/BlockHash"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "subscribeRuntimeVersion",
      "params": [],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "subscribeStorage",
      "params": [
        {
          "name": "keys",
          "description": "",
          "required": false,
          "schema": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StorageKey"
            }
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "traceBlock",
      "params": [
        {
          "name": "block",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Hash"
          }
        },
        {
          "name": "targets",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/Text"
          }
        },
        {
          "name": "storageKeys",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Text"
          }
        },
        {
          "name": "methods",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Text"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "trieMigrationStatus",
      "params": [
        {
          "name": "at",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/BlockHash"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "genSyncSpec",
      "params": [
        {
          "name": "raw",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/boolean"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "accountNextIndex",
      "params": [
        {
          "name": "accountId",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/AccountId"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "addLogFilter",
      "params": [
        {
          "name": "directives",
          "description": "",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "addReservedPeer",
      "params": [
        {
          "name": "peer",
          "description": "",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "chain",
      "params": [],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "chainType",
      "params": [],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "dryRun",
      "params": [
        {
          "name": "extrinsic",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Bytes"
          }
        },
        {
          "name": "at",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/BlockHash"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "health",
      "params": [],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "localListenAddresses",
      "params": [],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "localPeerId",
      "params": [],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "name",
      "params": [],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "networkState",
      "params": [],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "nodeRoles",
      "params": [],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "peers",
      "params": [],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "properties",
      "params": [],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "removeReservedPeer",
      "params": [
        {
          "name": "peerId",
          "description": "",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "reservedPeers",
      "params": [],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "resetLogFilter",
      "params": [],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "syncState",
      "params": [],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "version",
      "params": [],
      "tags": [
        {
          "name": "rpc"
        }
      ],
      "result": {
        "name": "result",
        "schema": {}
      }
    },
    {
      "name": "system_remark",
      "params": [
        {
          "name": "remark",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "array"
          }
        }
      ]
    },
    {
      "name": "system_setHeapPages",
      "params": [
        {
          "name": "pages",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "system_setCode",
      "params": [
        {
          "name": "code",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "array"
          }
        }
      ]
    },
    {
      "name": "system_setCodeWithoutChecks",
      "params": [
        {
          "name": "code",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "array"
          }
        }
      ]
    },
    {
      "name": "system_setStorage",
      "params": [
        {
          "name": "items",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/array"
          }
        }
      ]
    },
    {
      "name": "system_killStorage",
      "params": [
        {
          "name": "keys",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/array"
          }
        }
      ]
    },
    {
      "name": "system_killPrefix",
      "params": [
        {
          "name": "prefix",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "array"
          }
        },
        {
          "name": "subkeys",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "system_remarkWithEvent",
      "params": [
        {
          "name": "remark",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "array"
          }
        }
      ]
    },
    {
      "name": "utility_batch",
      "params": [
        {
          "name": "calls",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/array"
          }
        }
      ]
    },
    {
      "name": "utility_asDerivative",
      "params": [
        {
          "name": "index",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "call",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Call"
          }
        }
      ]
    },
    {
      "name": "utility_batchAll",
      "params": [
        {
          "name": "calls",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/array"
          }
        }
      ]
    },
    {
      "name": "utility_dispatchAs",
      "params": [
        {
          "name": "asOrigin",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/KitchensinkRuntimeOriginCaller"
          }
        },
        {
          "name": "call",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Call"
          }
        }
      ]
    },
    {
      "name": "utility_forceBatch",
      "params": [
        {
          "name": "calls",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/array"
          }
        }
      ]
    },
    {
      "name": "utility_withWeight",
      "params": [
        {
          "name": "call",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Call"
          }
        },
        {
          "name": "weight",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/SpWeightsWeightV2Weight"
          }
        }
      ]
    },
    {
      "name": "babe_reportEquivocation",
      "params": [
        {
          "name": "equivocationProof",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/SpConsensusSlotsEquivocationProof"
          }
        },
        {
          "name": "keyOwnerProof",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/SpSessionMembershipProof"
          }
        }
      ]
    },
    {
      "name": "babe_reportEquivocationUnsigned",
      "params": [
        {
          "name": "equivocationProof",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/SpConsensusSlotsEquivocationProof"
          }
        },
        {
          "name": "keyOwnerProof",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/SpSessionMembershipProof"
          }
        }
      ]
    },
    {
      "name": "babe_planConfigChange",
      "params": [
        {
          "name": "config",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/SpConsensusBabeDigestsNextConfigDescriptor"
          }
        }
      ]
    },
    {
      "name": "timestamp_set",
      "params": [
        {
          "name": "now",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "authorship_setUncles",
      "params": [
        {
          "name": "newUncles",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/array"
          }
        }
      ]
    },
    {
      "name": "indices_claim",
      "params": [
        {
          "name": "index",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "indices_transfer",
      "params": [
        {
          "name": "updated",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "index",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "indices_free",
      "params": [
        {
          "name": "index",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "indices_forceTransfer",
      "params": [
        {
          "name": "updated",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "index",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "freeze",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "boolean"
          }
        }
      ]
    },
    {
      "name": "indices_freeze",
      "params": [
        {
          "name": "index",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "balances_transfer",
      "params": [
        {
          "name": "dest",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "value",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "balances_setBalance",
      "params": [
        {
          "name": "who",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "newFree",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "newReserved",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "balances_forceTransfer",
      "params": [
        {
          "name": "source",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "dest",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "value",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "balances_transferKeepAlive",
      "params": [
        {
          "name": "dest",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "value",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "balances_transferAll",
      "params": [
        {
          "name": "dest",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "keepAlive",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "boolean"
          }
        }
      ]
    },
    {
      "name": "balances_forceUnreserve",
      "params": [
        {
          "name": "who",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "amount",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "electionProviderMultiPhase_submitUnsigned",
      "params": [
        {
          "name": "rawSolution",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/PalletElectionProviderMultiPhaseRawSolution"
          }
        },
        {
          "name": "witness",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/PalletElectionProviderMultiPhaseSolutionOrSnapshotSize"
          }
        }
      ]
    },
    {
      "name": "electionProviderMultiPhase_setMinimumUntrustedScore",
      "params": [
        {
          "name": "maybeNextScore",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/SpNposElectionsElectionScore"
          }
        }
      ]
    },
    {
      "name": "electionProviderMultiPhase_setEmergencyElectionResult",
      "params": [
        {
          "name": "supports",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/array"
          }
        }
      ]
    },
    {
      "name": "electionProviderMultiPhase_submit",
      "params": [
        {
          "name": "rawSolution",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/PalletElectionProviderMultiPhaseRawSolution"
          }
        }
      ]
    },
    {
      "name": "electionProviderMultiPhase_governanceFallback",
      "params": [
        {
          "name": "maybeMaxVoters",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "maybeMaxTargets",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "staking_bond",
      "params": [
        {
          "name": "controller",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "value",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "payee",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/PalletStakingRewardDestination"
          }
        }
      ]
    },
    {
      "name": "staking_bondExtra",
      "params": [
        {
          "name": "maxAdditional",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "staking_unbond",
      "params": [
        {
          "name": "value",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "staking_withdrawUnbonded",
      "params": [
        {
          "name": "numSlashingSpans",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "staking_validate",
      "params": [
        {
          "name": "prefs",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/PalletStakingValidatorPrefs"
          }
        }
      ]
    },
    {
      "name": "staking_nominate",
      "params": [
        {
          "name": "targets",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/array"
          }
        }
      ]
    },
    {
      "name": "staking_chill",
      "params": []
    },
    {
      "name": "staking_setPayee",
      "params": [
        {
          "name": "payee",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/PalletStakingRewardDestination"
          }
        }
      ]
    },
    {
      "name": "staking_setController",
      "params": [
        {
          "name": "controller",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        }
      ]
    },
    {
      "name": "staking_setValidatorCount",
      "params": [
        {
          "name": "updated",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "staking_increaseValidatorCount",
      "params": [
        {
          "name": "additional",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "staking_scaleValidatorCount",
      "params": [
        {
          "name": "factor",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Percent"
          }
        }
      ]
    },
    {
      "name": "staking_forceNoEras",
      "params": []
    },
    {
      "name": "staking_forceNewEra",
      "params": []
    },
    {
      "name": "staking_setInvulnerables",
      "params": [
        {
          "name": "invulnerables",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/array"
          }
        }
      ]
    },
    {
      "name": "staking_forceUnstake",
      "params": [
        {
          "name": "stash",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/AccountId32"
          }
        },
        {
          "name": "numSlashingSpans",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "staking_forceNewEraAlways",
      "params": []
    },
    {
      "name": "staking_cancelDeferredSlash",
      "params": [
        {
          "name": "era",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "slashIndices",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/array"
          }
        }
      ]
    },
    {
      "name": "staking_payoutStakers",
      "params": [
        {
          "name": "validatorStash",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/AccountId32"
          }
        },
        {
          "name": "era",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "staking_rebond",
      "params": [
        {
          "name": "value",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "staking_reapStash",
      "params": [
        {
          "name": "stash",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/AccountId32"
          }
        },
        {
          "name": "numSlashingSpans",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "staking_kick",
      "params": [
        {
          "name": "who",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/array"
          }
        }
      ]
    },
    {
      "name": "staking_setStakingConfigs",
      "params": [
        {
          "name": "minNominatorBond",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/PalletStakingPalletConfigOpU128"
          }
        },
        {
          "name": "minValidatorBond",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/PalletStakingPalletConfigOpU128"
          }
        },
        {
          "name": "maxNominatorCount",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/PalletStakingPalletConfigOpU32"
          }
        },
        {
          "name": "maxValidatorCount",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/PalletStakingPalletConfigOpU32"
          }
        },
        {
          "name": "chillThreshold",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/PalletStakingPalletConfigOpPercent"
          }
        },
        {
          "name": "minCommission",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/PalletStakingPalletConfigOpPerbill"
          }
        }
      ]
    },
    {
      "name": "staking_chillOther",
      "params": [
        {
          "name": "controller",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/AccountId32"
          }
        }
      ]
    },
    {
      "name": "staking_forceApplyMinCommission",
      "params": [
        {
          "name": "validatorStash",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/AccountId32"
          }
        }
      ]
    },
    {
      "name": "session_setKeys",
      "params": [
        {
          "name": "keys",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/KitchensinkRuntimeSessionKeys"
          }
        },
        {
          "name": "proof",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "array"
          }
        }
      ]
    },
    {
      "name": "session_purgeKeys",
      "params": []
    },
    {
      "name": "democracy_propose",
      "params": [
        {
          "name": "proposal",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/FrameSupportPreimagesBounded"
          }
        },
        {
          "name": "value",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "democracy_second",
      "params": [
        {
          "name": "proposal",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "democracy_vote",
      "params": [
        {
          "name": "refIndex",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "vote",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/PalletDemocracyVoteAccountVote"
          }
        }
      ]
    },
    {
      "name": "democracy_emergencyCancel",
      "params": [
        {
          "name": "refIndex",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "democracy_externalPropose",
      "params": [
        {
          "name": "proposal",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/FrameSupportPreimagesBounded"
          }
        }
      ]
    },
    {
      "name": "democracy_externalProposeMajority",
      "params": [
        {
          "name": "proposal",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/FrameSupportPreimagesBounded"
          }
        }
      ]
    },
    {
      "name": "democracy_externalProposeDefault",
      "params": [
        {
          "name": "proposal",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/FrameSupportPreimagesBounded"
          }
        }
      ]
    },
    {
      "name": "democracy_fastTrack",
      "params": [
        {
          "name": "proposalHash",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/H256"
          }
        },
        {
          "name": "votingPeriod",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "delay",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "democracy_vetoExternal",
      "params": [
        {
          "name": "proposalHash",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/H256"
          }
        }
      ]
    },
    {
      "name": "democracy_cancelReferendum",
      "params": [
        {
          "name": "refIndex",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "democracy_delegate",
      "params": [
        {
          "name": "to",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "conviction",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/PalletDemocracyConviction"
          }
        },
        {
          "name": "balance",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "democracy_undelegate",
      "params": []
    },
    {
      "name": "democracy_clearPublicProposals",
      "params": []
    },
    {
      "name": "democracy_unlock",
      "params": [
        {
          "name": "target",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        }
      ]
    },
    {
      "name": "democracy_removeVote",
      "params": [
        {
          "name": "index",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "democracy_removeOtherVote",
      "params": [
        {
          "name": "target",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "index",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "democracy_blacklist",
      "params": [
        {
          "name": "proposalHash",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/H256"
          }
        },
        {
          "name": "maybeRefIndex",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "democracy_cancelProposal",
      "params": [
        {
          "name": "propIndex",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "council_setMembers",
      "params": [
        {
          "name": "newMembers",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/array"
          }
        },
        {
          "name": "prime",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/AccountId32"
          }
        },
        {
          "name": "oldCount",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "council_execute",
      "params": [
        {
          "name": "proposal",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Call"
          }
        },
        {
          "name": "lengthBound",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "council_propose",
      "params": [
        {
          "name": "threshold",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "proposal",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Call"
          }
        },
        {
          "name": "lengthBound",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "council_vote",
      "params": [
        {
          "name": "proposal",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/H256"
          }
        },
        {
          "name": "index",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "approve",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "boolean"
          }
        }
      ]
    },
    {
      "name": "council_closeOldWeight",
      "params": [
        {
          "name": "proposalHash",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/H256"
          }
        },
        {
          "name": "index",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "proposalWeightBound",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "lengthBound",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "council_disapproveProposal",
      "params": [
        {
          "name": "proposalHash",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/H256"
          }
        }
      ]
    },
    {
      "name": "council_close",
      "params": [
        {
          "name": "proposalHash",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/H256"
          }
        },
        {
          "name": "index",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "proposalWeightBound",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/SpWeightsWeightV2Weight"
          }
        },
        {
          "name": "lengthBound",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "technicalCommittee_setMembers",
      "params": [
        {
          "name": "newMembers",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/array"
          }
        },
        {
          "name": "prime",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/AccountId32"
          }
        },
        {
          "name": "oldCount",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "technicalCommittee_execute",
      "params": [
        {
          "name": "proposal",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Call"
          }
        },
        {
          "name": "lengthBound",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "technicalCommittee_propose",
      "params": [
        {
          "name": "threshold",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "proposal",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Call"
          }
        },
        {
          "name": "lengthBound",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "technicalCommittee_vote",
      "params": [
        {
          "name": "proposal",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/H256"
          }
        },
        {
          "name": "index",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "approve",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "boolean"
          }
        }
      ]
    },
    {
      "name": "technicalCommittee_closeOldWeight",
      "params": [
        {
          "name": "proposalHash",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/H256"
          }
        },
        {
          "name": "index",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "proposalWeightBound",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "lengthBound",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "technicalCommittee_disapproveProposal",
      "params": [
        {
          "name": "proposalHash",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/H256"
          }
        }
      ]
    },
    {
      "name": "technicalCommittee_close",
      "params": [
        {
          "name": "proposalHash",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/H256"
          }
        },
        {
          "name": "index",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "proposalWeightBound",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/SpWeightsWeightV2Weight"
          }
        },
        {
          "name": "lengthBound",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "elections_vote",
      "params": [
        {
          "name": "votes",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/array"
          }
        },
        {
          "name": "value",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "elections_removeVoter",
      "params": []
    },
    {
      "name": "elections_submitCandidacy",
      "params": [
        {
          "name": "candidateCount",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "elections_renounceCandidacy",
      "params": [
        {
          "name": "renouncing",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/PalletElectionsPhragmenRenouncing"
          }
        }
      ]
    },
    {
      "name": "elections_removeMember",
      "params": [
        {
          "name": "who",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "slashBond",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "boolean"
          }
        },
        {
          "name": "rerunElection",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "boolean"
          }
        }
      ]
    },
    {
      "name": "elections_cleanDefunctVoters",
      "params": [
        {
          "name": "numVoters",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "numDefunct",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "technicalMembership_addMember",
      "params": [
        {
          "name": "who",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        }
      ]
    },
    {
      "name": "technicalMembership_removeMember",
      "params": [
        {
          "name": "who",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        }
      ]
    },
    {
      "name": "technicalMembership_swapMember",
      "params": [
        {
          "name": "remove",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "add",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        }
      ]
    },
    {
      "name": "technicalMembership_resetMembers",
      "params": [
        {
          "name": "members",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/array"
          }
        }
      ]
    },
    {
      "name": "technicalMembership_changeKey",
      "params": [
        {
          "name": "updated",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        }
      ]
    },
    {
      "name": "technicalMembership_setPrime",
      "params": [
        {
          "name": "who",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        }
      ]
    },
    {
      "name": "technicalMembership_clearPrime",
      "params": []
    },
    {
      "name": "grandpa_reportEquivocation",
      "params": [
        {
          "name": "equivocationProof",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/SpFinalityGrandpaEquivocationProof"
          }
        },
        {
          "name": "keyOwnerProof",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/SpSessionMembershipProof"
          }
        }
      ]
    },
    {
      "name": "grandpa_reportEquivocationUnsigned",
      "params": [
        {
          "name": "equivocationProof",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/SpFinalityGrandpaEquivocationProof"
          }
        },
        {
          "name": "keyOwnerProof",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/SpSessionMembershipProof"
          }
        }
      ]
    },
    {
      "name": "grandpa_noteStalled",
      "params": [
        {
          "name": "delay",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "bestFinalizedBlockNumber",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "treasury_proposeSpend",
      "params": [
        {
          "name": "value",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "beneficiary",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        }
      ]
    },
    {
      "name": "treasury_rejectProposal",
      "params": [
        {
          "name": "proposalId",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "treasury_approveProposal",
      "params": [
        {
          "name": "proposalId",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "treasury_spend",
      "params": [
        {
          "name": "amount",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "beneficiary",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        }
      ]
    },
    {
      "name": "treasury_removeApproval",
      "params": [
        {
          "name": "proposalId",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "contracts_callOldWeight",
      "params": [
        {
          "name": "dest",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "value",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "gasLimit",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "storageDepositLimit",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "data",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "array"
          }
        }
      ]
    },
    {
      "name": "contracts_instantiateWithCodeOldWeight",
      "params": [
        {
          "name": "value",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "gasLimit",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "storageDepositLimit",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "code",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "array"
          }
        },
        {
          "name": "data",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "array"
          }
        },
        {
          "name": "salt",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "array"
          }
        }
      ]
    },
    {
      "name": "contracts_instantiateOldWeight",
      "params": [
        {
          "name": "value",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "gasLimit",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "storageDepositLimit",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "codeHash",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/H256"
          }
        },
        {
          "name": "data",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "array"
          }
        },
        {
          "name": "salt",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "array"
          }
        }
      ]
    },
    {
      "name": "contracts_uploadCode",
      "params": [
        {
          "name": "code",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "array"
          }
        },
        {
          "name": "storageDepositLimit",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "determinism",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/PalletContractsWasmDeterminism"
          }
        }
      ]
    },
    {
      "name": "contracts_removeCode",
      "params": [
        {
          "name": "codeHash",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/H256"
          }
        }
      ]
    },
    {
      "name": "contracts_setCode",
      "params": [
        {
          "name": "dest",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "codeHash",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/H256"
          }
        }
      ]
    },
    {
      "name": "contracts_call",
      "params": [
        {
          "name": "dest",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "value",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "gasLimit",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/SpWeightsWeightV2Weight"
          }
        },
        {
          "name": "storageDepositLimit",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "data",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "array"
          }
        }
      ]
    },
    {
      "name": "contracts_instantiateWithCode",
      "params": [
        {
          "name": "value",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "gasLimit",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/SpWeightsWeightV2Weight"
          }
        },
        {
          "name": "storageDepositLimit",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "code",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "array"
          }
        },
        {
          "name": "data",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "array"
          }
        },
        {
          "name": "salt",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "array"
          }
        }
      ]
    },
    {
      "name": "contracts_instantiate",
      "params": [
        {
          "name": "value",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "gasLimit",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/SpWeightsWeightV2Weight"
          }
        },
        {
          "name": "storageDepositLimit",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "codeHash",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/H256"
          }
        },
        {
          "name": "data",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "array"
          }
        },
        {
          "name": "salt",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "array"
          }
        }
      ]
    },
    {
      "name": "sudo_sudo",
      "params": [
        {
          "name": "call",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Call"
          }
        }
      ]
    },
    {
      "name": "sudo_sudoUncheckedWeight",
      "params": [
        {
          "name": "call",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Call"
          }
        },
        {
          "name": "weight",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/SpWeightsWeightV2Weight"
          }
        }
      ]
    },
    {
      "name": "sudo_setKey",
      "params": [
        {
          "name": "updated",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        }
      ]
    },
    {
      "name": "sudo_sudoAs",
      "params": [
        {
          "name": "who",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "call",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Call"
          }
        }
      ]
    },
    {
      "name": "imOnline_heartbeat",
      "params": [
        {
          "name": "heartbeat",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/PalletImOnlineHeartbeat"
          }
        },
        {
          "name": "signature",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/PalletImOnlineSr25519AppSr25519Signature"
          }
        }
      ]
    },
    {
      "name": "identity_addRegistrar",
      "params": [
        {
          "name": "account",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        }
      ]
    },
    {
      "name": "identity_setIdentity",
      "params": [
        {
          "name": "info",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/PalletIdentityIdentityInfo"
          }
        }
      ]
    },
    {
      "name": "identity_setSubs",
      "params": [
        {
          "name": "subs",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/array"
          }
        }
      ]
    },
    {
      "name": "identity_clearIdentity",
      "params": []
    },
    {
      "name": "identity_requestJudgement",
      "params": [
        {
          "name": "regIndex",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "maxFee",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "identity_cancelRequest",
      "params": [
        {
          "name": "regIndex",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "identity_setFee",
      "params": [
        {
          "name": "index",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "fee",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "identity_setAccountId",
      "params": [
        {
          "name": "index",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "updated",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        }
      ]
    },
    {
      "name": "identity_setFields",
      "params": [
        {
          "name": "index",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "fields",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/PalletIdentityBitFlags"
          }
        }
      ]
    },
    {
      "name": "identity_provideJudgement",
      "params": [
        {
          "name": "regIndex",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "target",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "judgement",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/PalletIdentityJudgement"
          }
        },
        {
          "name": "identity",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/H256"
          }
        }
      ]
    },
    {
      "name": "identity_killIdentity",
      "params": [
        {
          "name": "target",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        }
      ]
    },
    {
      "name": "identity_addSub",
      "params": [
        {
          "name": "sub",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "data",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Data"
          }
        }
      ]
    },
    {
      "name": "identity_renameSub",
      "params": [
        {
          "name": "sub",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "data",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Data"
          }
        }
      ]
    },
    {
      "name": "identity_removeSub",
      "params": [
        {
          "name": "sub",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        }
      ]
    },
    {
      "name": "identity_quitSub",
      "params": []
    },
    {
      "name": "society_bid",
      "params": [
        {
          "name": "value",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "society_unbid",
      "params": [
        {
          "name": "pos",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "society_vouch",
      "params": [
        {
          "name": "who",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "value",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "tip",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "society_unvouch",
      "params": [
        {
          "name": "pos",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "society_vote",
      "params": [
        {
          "name": "candidate",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "approve",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "boolean"
          }
        }
      ]
    },
    {
      "name": "society_defenderVote",
      "params": [
        {
          "name": "approve",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "boolean"
          }
        }
      ]
    },
    {
      "name": "society_payout",
      "params": []
    },
    {
      "name": "society_found",
      "params": [
        {
          "name": "founder",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "maxMembers",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "rules",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "array"
          }
        }
      ]
    },
    {
      "name": "society_unfound",
      "params": []
    },
    {
      "name": "society_judgeSuspendedMember",
      "params": [
        {
          "name": "who",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "forgive",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "boolean"
          }
        }
      ]
    },
    {
      "name": "society_judgeSuspendedCandidate",
      "params": [
        {
          "name": "who",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "judgement",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/PalletSocietyJudgement"
          }
        }
      ]
    },
    {
      "name": "society_setMaxMembers",
      "params": [
        {
          "name": "max",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "recovery_asRecovered",
      "params": [
        {
          "name": "account",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "call",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Call"
          }
        }
      ]
    },
    {
      "name": "recovery_setRecovered",
      "params": [
        {
          "name": "lost",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "rescuer",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        }
      ]
    },
    {
      "name": "recovery_createRecovery",
      "params": [
        {
          "name": "friends",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/array"
          }
        },
        {
          "name": "threshold",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "delayPeriod",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "recovery_initiateRecovery",
      "params": [
        {
          "name": "account",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        }
      ]
    },
    {
      "name": "recovery_vouchRecovery",
      "params": [
        {
          "name": "lost",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "rescuer",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        }
      ]
    },
    {
      "name": "recovery_claimRecovery",
      "params": [
        {
          "name": "account",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        }
      ]
    },
    {
      "name": "recovery_closeRecovery",
      "params": [
        {
          "name": "rescuer",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        }
      ]
    },
    {
      "name": "recovery_removeRecovery",
      "params": []
    },
    {
      "name": "recovery_cancelRecovered",
      "params": [
        {
          "name": "account",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        }
      ]
    },
    {
      "name": "vesting_vest",
      "params": []
    },
    {
      "name": "vesting_vestOther",
      "params": [
        {
          "name": "target",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        }
      ]
    },
    {
      "name": "vesting_vestedTransfer",
      "params": [
        {
          "name": "target",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "schedule",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/PalletVestingVestingInfo"
          }
        }
      ]
    },
    {
      "name": "vesting_forceVestedTransfer",
      "params": [
        {
          "name": "source",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "target",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "schedule",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/PalletVestingVestingInfo"
          }
        }
      ]
    },
    {
      "name": "vesting_mergeSchedules",
      "params": [
        {
          "name": "schedule1Index",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "schedule2Index",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "scheduler_schedule",
      "params": [
        {
          "name": "when",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "maybePeriodic",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/array"
          }
        },
        {
          "name": "priority",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "call",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Call"
          }
        }
      ]
    },
    {
      "name": "scheduler_cancel",
      "params": [
        {
          "name": "when",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "index",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "scheduler_scheduleNamed",
      "params": [
        {
          "name": "id",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/[u8;32]"
          }
        },
        {
          "name": "when",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "maybePeriodic",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/array"
          }
        },
        {
          "name": "priority",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "call",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Call"
          }
        }
      ]
    },
    {
      "name": "scheduler_cancelNamed",
      "params": [
        {
          "name": "id",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/[u8;32]"
          }
        }
      ]
    },
    {
      "name": "scheduler_scheduleAfter",
      "params": [
        {
          "name": "after",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "maybePeriodic",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/array"
          }
        },
        {
          "name": "priority",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "call",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Call"
          }
        }
      ]
    },
    {
      "name": "scheduler_scheduleNamedAfter",
      "params": [
        {
          "name": "id",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/[u8;32]"
          }
        },
        {
          "name": "after",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "maybePeriodic",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/array"
          }
        },
        {
          "name": "priority",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "call",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Call"
          }
        }
      ]
    },
    {
      "name": "preimage_notePreimage",
      "params": [
        {
          "name": "bytes",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "array"
          }
        }
      ]
    },
    {
      "name": "preimage_unnotePreimage",
      "params": [
        {
          "name": "hash",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/H256"
          }
        }
      ]
    },
    {
      "name": "preimage_requestPreimage",
      "params": [
        {
          "name": "hash",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/H256"
          }
        }
      ]
    },
    {
      "name": "preimage_unrequestPreimage",
      "params": [
        {
          "name": "hash",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/H256"
          }
        }
      ]
    },
    {
      "name": "proxy_proxy",
      "params": [
        {
          "name": "real",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "forceProxyType",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/KitchensinkRuntimeProxyType"
          }
        },
        {
          "name": "call",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Call"
          }
        }
      ]
    },
    {
      "name": "proxy_addProxy",
      "params": [
        {
          "name": "delegate",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "proxyType",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/KitchensinkRuntimeProxyType"
          }
        },
        {
          "name": "delay",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "proxy_removeProxy",
      "params": [
        {
          "name": "delegate",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "proxyType",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/KitchensinkRuntimeProxyType"
          }
        },
        {
          "name": "delay",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "proxy_removeProxies",
      "params": []
    },
    {
      "name": "proxy_createPure",
      "params": [
        {
          "name": "proxyType",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/KitchensinkRuntimeProxyType"
          }
        },
        {
          "name": "delay",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "index",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "proxy_killPure",
      "params": [
        {
          "name": "spawner",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "proxyType",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/KitchensinkRuntimeProxyType"
          }
        },
        {
          "name": "index",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "height",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "extIndex",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "proxy_announce",
      "params": [
        {
          "name": "real",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "callHash",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/H256"
          }
        }
      ]
    },
    {
      "name": "proxy_removeAnnouncement",
      "params": [
        {
          "name": "real",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "callHash",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/H256"
          }
        }
      ]
    },
    {
      "name": "proxy_rejectAnnouncement",
      "params": [
        {
          "name": "delegate",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "callHash",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/H256"
          }
        }
      ]
    },
    {
      "name": "proxy_proxyAnnounced",
      "params": [
        {
          "name": "delegate",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "real",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "forceProxyType",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/KitchensinkRuntimeProxyType"
          }
        },
        {
          "name": "call",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Call"
          }
        }
      ]
    },
    {
      "name": "multisig_asMultiThreshold1",
      "params": [
        {
          "name": "otherSignatories",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/array"
          }
        },
        {
          "name": "call",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Call"
          }
        }
      ]
    },
    {
      "name": "multisig_asMulti",
      "params": [
        {
          "name": "threshold",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "otherSignatories",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/array"
          }
        },
        {
          "name": "maybeTimepoint",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/PalletMultisigTimepoint"
          }
        },
        {
          "name": "call",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Call"
          }
        },
        {
          "name": "maxWeight",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/SpWeightsWeightV2Weight"
          }
        }
      ]
    },
    {
      "name": "multisig_approveAsMulti",
      "params": [
        {
          "name": "threshold",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "otherSignatories",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/array"
          }
        },
        {
          "name": "maybeTimepoint",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/PalletMultisigTimepoint"
          }
        },
        {
          "name": "callHash",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/[u8;32]"
          }
        },
        {
          "name": "maxWeight",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/SpWeightsWeightV2Weight"
          }
        }
      ]
    },
    {
      "name": "multisig_cancelAsMulti",
      "params": [
        {
          "name": "threshold",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "otherSignatories",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/array"
          }
        },
        {
          "name": "timepoint",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/PalletMultisigTimepoint"
          }
        },
        {
          "name": "callHash",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/[u8;32]"
          }
        }
      ]
    },
    {
      "name": "bounties_proposeBounty",
      "params": [
        {
          "name": "value",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "description",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "array"
          }
        }
      ]
    },
    {
      "name": "bounties_approveBounty",
      "params": [
        {
          "name": "bountyId",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "bounties_proposeCurator",
      "params": [
        {
          "name": "bountyId",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "curator",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "fee",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "bounties_unassignCurator",
      "params": [
        {
          "name": "bountyId",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "bounties_acceptCurator",
      "params": [
        {
          "name": "bountyId",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "bounties_awardBounty",
      "params": [
        {
          "name": "bountyId",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "beneficiary",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        }
      ]
    },
    {
      "name": "bounties_claimBounty",
      "params": [
        {
          "name": "bountyId",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "bounties_closeBounty",
      "params": [
        {
          "name": "bountyId",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "bounties_extendBountyExpiry",
      "params": [
        {
          "name": "bountyId",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "remark",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "array"
          }
        }
      ]
    },
    {
      "name": "tips_reportAwesome",
      "params": [
        {
          "name": "reason",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "array"
          }
        },
        {
          "name": "who",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        }
      ]
    },
    {
      "name": "tips_retractTip",
      "params": [
        {
          "name": "hash",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/H256"
          }
        }
      ]
    },
    {
      "name": "tips_tipNew",
      "params": [
        {
          "name": "reason",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "array"
          }
        },
        {
          "name": "who",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "tipValue",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "tips_tip",
      "params": [
        {
          "name": "hash",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/H256"
          }
        },
        {
          "name": "tipValue",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "tips_closeTip",
      "params": [
        {
          "name": "hash",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/H256"
          }
        }
      ]
    },
    {
      "name": "tips_slashTip",
      "params": [
        {
          "name": "hash",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/H256"
          }
        }
      ]
    },
    {
      "name": "assets_create",
      "params": [
        {
          "name": "id",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "admin",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "minBalance",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "assets_forceCreate",
      "params": [
        {
          "name": "id",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "owner",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "isSufficient",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "boolean"
          }
        },
        {
          "name": "minBalance",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "assets_startDestroy",
      "params": [
        {
          "name": "id",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "assets_destroyAccounts",
      "params": [
        {
          "name": "id",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "assets_destroyApprovals",
      "params": [
        {
          "name": "id",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "assets_finishDestroy",
      "params": [
        {
          "name": "id",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "assets_mint",
      "params": [
        {
          "name": "id",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "beneficiary",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "amount",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "assets_burn",
      "params": [
        {
          "name": "id",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "who",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "amount",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "assets_transfer",
      "params": [
        {
          "name": "id",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "target",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "amount",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "assets_transferKeepAlive",
      "params": [
        {
          "name": "id",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "target",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "amount",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "assets_forceTransfer",
      "params": [
        {
          "name": "id",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "source",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "dest",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "amount",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "assets_freeze",
      "params": [
        {
          "name": "id",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "who",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        }
      ]
    },
    {
      "name": "assets_thaw",
      "params": [
        {
          "name": "id",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "who",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        }
      ]
    },
    {
      "name": "assets_freezeAsset",
      "params": [
        {
          "name": "id",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "assets_thawAsset",
      "params": [
        {
          "name": "id",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "assets_transferOwnership",
      "params": [
        {
          "name": "id",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "owner",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        }
      ]
    },
    {
      "name": "assets_setTeam",
      "params": [
        {
          "name": "id",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "issuer",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "admin",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "freezer",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        }
      ]
    },
    {
      "name": "assets_setMetadata",
      "params": [
        {
          "name": "id",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "name",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "array"
          }
        },
        {
          "name": "symbol",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "array"
          }
        },
        {
          "name": "decimals",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "assets_clearMetadata",
      "params": [
        {
          "name": "id",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "assets_forceSetMetadata",
      "params": [
        {
          "name": "id",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "name",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "array"
          }
        },
        {
          "name": "symbol",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "array"
          }
        },
        {
          "name": "decimals",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "isFrozen",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "boolean"
          }
        }
      ]
    },
    {
      "name": "assets_forceClearMetadata",
      "params": [
        {
          "name": "id",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "assets_forceAssetStatus",
      "params": [
        {
          "name": "id",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "owner",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "issuer",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "admin",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "freezer",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "minBalance",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "isSufficient",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "boolean"
          }
        },
        {
          "name": "isFrozen",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "boolean"
          }
        }
      ]
    },
    {
      "name": "assets_approveTransfer",
      "params": [
        {
          "name": "id",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "delegate",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "amount",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "assets_cancelApproval",
      "params": [
        {
          "name": "id",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "delegate",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        }
      ]
    },
    {
      "name": "assets_forceCancelApproval",
      "params": [
        {
          "name": "id",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "owner",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "delegate",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        }
      ]
    },
    {
      "name": "assets_transferApproved",
      "params": [
        {
          "name": "id",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "owner",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "destination",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "amount",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "assets_touch",
      "params": [
        {
          "name": "id",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "assets_refund",
      "params": [
        {
          "name": "id",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "allowBurn",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "boolean"
          }
        }
      ]
    },
    {
      "name": "lottery_buyTicket",
      "params": [
        {
          "name": "call",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Call"
          }
        }
      ]
    },
    {
      "name": "lottery_setCalls",
      "params": [
        {
          "name": "calls",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/array"
          }
        }
      ]
    },
    {
      "name": "lottery_startLottery",
      "params": [
        {
          "name": "price",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "length",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "delay",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "repeat",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "boolean"
          }
        }
      ]
    },
    {
      "name": "lottery_stopRepeat",
      "params": []
    },
    {
      "name": "nis_placeBid",
      "params": [
        {
          "name": "amount",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "duration",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "nis_retractBid",
      "params": [
        {
          "name": "amount",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "duration",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "nis_fundDeficit",
      "params": []
    },
    {
      "name": "nis_thaw",
      "params": [
        {
          "name": "index",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "portion",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "uniques_create",
      "params": [
        {
          "name": "collection",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "admin",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        }
      ]
    },
    {
      "name": "uniques_forceCreate",
      "params": [
        {
          "name": "collection",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "owner",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "freeHolding",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "boolean"
          }
        }
      ]
    },
    {
      "name": "uniques_destroy",
      "params": [
        {
          "name": "collection",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "witness",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/PalletUniquesDestroyWitness"
          }
        }
      ]
    },
    {
      "name": "uniques_mint",
      "params": [
        {
          "name": "collection",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "item",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "owner",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        }
      ]
    },
    {
      "name": "uniques_burn",
      "params": [
        {
          "name": "collection",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "item",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "checkOwner",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        }
      ]
    },
    {
      "name": "uniques_transfer",
      "params": [
        {
          "name": "collection",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "item",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "dest",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        }
      ]
    },
    {
      "name": "uniques_redeposit",
      "params": [
        {
          "name": "collection",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "items",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/array"
          }
        }
      ]
    },
    {
      "name": "uniques_freeze",
      "params": [
        {
          "name": "collection",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "item",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "uniques_thaw",
      "params": [
        {
          "name": "collection",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "item",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "uniques_freezeCollection",
      "params": [
        {
          "name": "collection",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "uniques_thawCollection",
      "params": [
        {
          "name": "collection",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "uniques_transferOwnership",
      "params": [
        {
          "name": "collection",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "owner",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        }
      ]
    },
    {
      "name": "uniques_setTeam",
      "params": [
        {
          "name": "collection",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "issuer",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "admin",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "freezer",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        }
      ]
    },
    {
      "name": "uniques_approveTransfer",
      "params": [
        {
          "name": "collection",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "item",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "delegate",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        }
      ]
    },
    {
      "name": "uniques_cancelApproval",
      "params": [
        {
          "name": "collection",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "item",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "maybeCheckDelegate",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        }
      ]
    },
    {
      "name": "uniques_forceItemStatus",
      "params": [
        {
          "name": "collection",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "owner",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "issuer",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "admin",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "freezer",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "freeHolding",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "boolean"
          }
        },
        {
          "name": "isFrozen",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "boolean"
          }
        }
      ]
    },
    {
      "name": "uniques_setAttribute",
      "params": [
        {
          "name": "collection",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "maybeItem",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "key",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "array"
          }
        },
        {
          "name": "value",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "array"
          }
        }
      ]
    },
    {
      "name": "uniques_clearAttribute",
      "params": [
        {
          "name": "collection",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "maybeItem",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "key",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "array"
          }
        }
      ]
    },
    {
      "name": "uniques_setMetadata",
      "params": [
        {
          "name": "collection",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "item",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "data",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "array"
          }
        },
        {
          "name": "isFrozen",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "boolean"
          }
        }
      ]
    },
    {
      "name": "uniques_clearMetadata",
      "params": [
        {
          "name": "collection",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "item",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "uniques_setCollectionMetadata",
      "params": [
        {
          "name": "collection",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "data",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "array"
          }
        },
        {
          "name": "isFrozen",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "boolean"
          }
        }
      ]
    },
    {
      "name": "uniques_clearCollectionMetadata",
      "params": [
        {
          "name": "collection",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "uniques_setAcceptOwnership",
      "params": [
        {
          "name": "maybeCollection",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "uniques_setCollectionMaxSupply",
      "params": [
        {
          "name": "collection",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "maxSupply",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "uniques_setPrice",
      "params": [
        {
          "name": "collection",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "item",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "price",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "whitelistedBuyer",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        }
      ]
    },
    {
      "name": "uniques_buyItem",
      "params": [
        {
          "name": "collection",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "item",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "bidPrice",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "transactionStorage_store",
      "params": [
        {
          "name": "data",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "array"
          }
        }
      ]
    },
    {
      "name": "transactionStorage_renew",
      "params": [
        {
          "name": "block",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "index",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "transactionStorage_checkProof",
      "params": [
        {
          "name": "proof",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/SpTransactionStorageProofTransactionStorageProof"
          }
        }
      ]
    },
    {
      "name": "voterList_rebag",
      "params": [
        {
          "name": "dislocated",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        }
      ]
    },
    {
      "name": "voterList_putInFrontOf",
      "params": [
        {
          "name": "lighter",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        }
      ]
    },
    {
      "name": "stateTrieMigration_controlAutoMigration",
      "params": [
        {
          "name": "maybeConfig",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/PalletStateTrieMigrationMigrationLimits"
          }
        }
      ]
    },
    {
      "name": "stateTrieMigration_continueMigrate",
      "params": [
        {
          "name": "limits",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/PalletStateTrieMigrationMigrationLimits"
          }
        },
        {
          "name": "realSizeUpper",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "witnessTask",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/PalletStateTrieMigrationMigrationTask"
          }
        }
      ]
    },
    {
      "name": "stateTrieMigration_migrateCustomTop",
      "params": [
        {
          "name": "keys",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/array"
          }
        },
        {
          "name": "witnessSize",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "stateTrieMigration_migrateCustomChild",
      "params": [
        {
          "name": "root",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "array"
          }
        },
        {
          "name": "childKeys",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/array"
          }
        },
        {
          "name": "totalSize",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "stateTrieMigration_setSignedMaxLimits",
      "params": [
        {
          "name": "limits",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/PalletStateTrieMigrationMigrationLimits"
          }
        }
      ]
    },
    {
      "name": "stateTrieMigration_forceSetProgress",
      "params": [
        {
          "name": "progressTop",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/PalletStateTrieMigrationProgress"
          }
        },
        {
          "name": "progressChild",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/PalletStateTrieMigrationProgress"
          }
        }
      ]
    },
    {
      "name": "childBounties_addChildBounty",
      "params": [
        {
          "name": "parentBountyId",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "value",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "description",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "array"
          }
        }
      ]
    },
    {
      "name": "childBounties_proposeCurator",
      "params": [
        {
          "name": "parentBountyId",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "childBountyId",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "curator",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "fee",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "childBounties_acceptCurator",
      "params": [
        {
          "name": "parentBountyId",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "childBountyId",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "childBounties_unassignCurator",
      "params": [
        {
          "name": "parentBountyId",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "childBountyId",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "childBounties_awardChildBounty",
      "params": [
        {
          "name": "parentBountyId",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "childBountyId",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "beneficiary",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        }
      ]
    },
    {
      "name": "childBounties_claimChildBounty",
      "params": [
        {
          "name": "parentBountyId",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "childBountyId",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "childBounties_closeChildBounty",
      "params": [
        {
          "name": "parentBountyId",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "childBountyId",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "referenda_submit",
      "params": [
        {
          "name": "proposalOrigin",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/KitchensinkRuntimeOriginCaller"
          }
        },
        {
          "name": "proposal",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/FrameSupportPreimagesBounded"
          }
        },
        {
          "name": "enactmentMoment",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/FrameSupportScheduleDispatchTime"
          }
        }
      ]
    },
    {
      "name": "referenda_placeDecisionDeposit",
      "params": [
        {
          "name": "index",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "referenda_refundDecisionDeposit",
      "params": [
        {
          "name": "index",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "referenda_cancel",
      "params": [
        {
          "name": "index",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "referenda_kill",
      "params": [
        {
          "name": "index",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "referenda_nudgeReferendum",
      "params": [
        {
          "name": "index",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "referenda_oneFewerDeciding",
      "params": [
        {
          "name": "track",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "referenda_refundSubmissionDeposit",
      "params": [
        {
          "name": "index",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "remark_store",
      "params": [
        {
          "name": "remark",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "array"
          }
        }
      ]
    },
    {
      "name": "rootTesting_fillBlock",
      "params": [
        {
          "name": "ratio",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Perbill"
          }
        }
      ]
    },
    {
      "name": "convictionVoting_vote",
      "params": [
        {
          "name": "pollIndex",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "vote",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/PalletConvictionVotingVoteAccountVote"
          }
        }
      ]
    },
    {
      "name": "convictionVoting_delegate",
      "params": [
        {
          "name": "clazz",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "to",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "conviction",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/PalletConvictionVotingConviction"
          }
        },
        {
          "name": "balance",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "convictionVoting_undelegate",
      "params": [
        {
          "name": "clazz",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "convictionVoting_unlock",
      "params": [
        {
          "name": "clazz",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "target",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        }
      ]
    },
    {
      "name": "convictionVoting_removeVote",
      "params": [
        {
          "name": "clazz",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "index",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "convictionVoting_removeOtherVote",
      "params": [
        {
          "name": "target",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "clazz",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "index",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "whitelist_whitelistCall",
      "params": [
        {
          "name": "callHash",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/H256"
          }
        }
      ]
    },
    {
      "name": "whitelist_removeWhitelistedCall",
      "params": [
        {
          "name": "callHash",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/H256"
          }
        }
      ]
    },
    {
      "name": "whitelist_dispatchWhitelistedCall",
      "params": [
        {
          "name": "callHash",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/H256"
          }
        },
        {
          "name": "callEncodedLen",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "callWeightWitness",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/SpWeightsWeightV2Weight"
          }
        }
      ]
    },
    {
      "name": "whitelist_dispatchWhitelistedCallWithPreimage",
      "params": [
        {
          "name": "call",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Call"
          }
        }
      ]
    },
    {
      "name": "allianceMotion_setMembers",
      "params": [
        {
          "name": "newMembers",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/array"
          }
        },
        {
          "name": "prime",
          "description": "",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/AccountId32"
          }
        },
        {
          "name": "oldCount",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "allianceMotion_execute",
      "params": [
        {
          "name": "proposal",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Call"
          }
        },
        {
          "name": "lengthBound",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "allianceMotion_propose",
      "params": [
        {
          "name": "threshold",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "proposal",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Call"
          }
        },
        {
          "name": "lengthBound",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "allianceMotion_vote",
      "params": [
        {
          "name": "proposal",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/H256"
          }
        },
        {
          "name": "index",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "approve",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "boolean"
          }
        }
      ]
    },
    {
      "name": "allianceMotion_closeOldWeight",
      "params": [
        {
          "name": "proposalHash",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/H256"
          }
        },
        {
          "name": "index",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "proposalWeightBound",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "lengthBound",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "allianceMotion_disapproveProposal",
      "params": [
        {
          "name": "proposalHash",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/H256"
          }
        }
      ]
    },
    {
      "name": "allianceMotion_close",
      "params": [
        {
          "name": "proposalHash",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/H256"
          }
        },
        {
          "name": "index",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "proposalWeightBound",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/SpWeightsWeightV2Weight"
          }
        },
        {
          "name": "lengthBound",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "alliance_propose",
      "params": [
        {
          "name": "threshold",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "proposal",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/Call"
          }
        },
        {
          "name": "lengthBound",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "alliance_vote",
      "params": [
        {
          "name": "proposal",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/H256"
          }
        },
        {
          "name": "index",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "approve",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "boolean"
          }
        }
      ]
    },
    {
      "name": "alliance_closeOldWeight",
      "params": [
        {
          "name": "proposalHash",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/H256"
          }
        },
        {
          "name": "index",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "proposalWeightBound",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "lengthBound",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "alliance_initMembers",
      "params": [
        {
          "name": "fellows",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/array"
          }
        },
        {
          "name": "allies",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/array"
          }
        }
      ]
    },
    {
      "name": "alliance_disband",
      "params": [
        {
          "name": "witness",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/PalletAllianceDisbandWitness"
          }
        }
      ]
    },
    {
      "name": "alliance_setRule",
      "params": [
        {
          "name": "rule",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/PalletAllianceCid"
          }
        }
      ]
    },
    {
      "name": "alliance_announce",
      "params": [
        {
          "name": "announcement",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/PalletAllianceCid"
          }
        }
      ]
    },
    {
      "name": "alliance_removeAnnouncement",
      "params": [
        {
          "name": "announcement",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/PalletAllianceCid"
          }
        }
      ]
    },
    {
      "name": "alliance_joinAlliance",
      "params": []
    },
    {
      "name": "alliance_nominateAlly",
      "params": [
        {
          "name": "who",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        }
      ]
    },
    {
      "name": "alliance_elevateAlly",
      "params": [
        {
          "name": "ally",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        }
      ]
    },
    {
      "name": "alliance_giveRetirementNotice",
      "params": []
    },
    {
      "name": "alliance_retire",
      "params": []
    },
    {
      "name": "alliance_kickMember",
      "params": [
        {
          "name": "who",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        }
      ]
    },
    {
      "name": "alliance_addUnscrupulousItems",
      "params": [
        {
          "name": "items",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/array"
          }
        }
      ]
    },
    {
      "name": "alliance_removeUnscrupulousItems",
      "params": [
        {
          "name": "items",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/array"
          }
        }
      ]
    },
    {
      "name": "alliance_close",
      "params": [
        {
          "name": "proposalHash",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/H256"
          }
        },
        {
          "name": "index",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "proposalWeightBound",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/SpWeightsWeightV2Weight"
          }
        },
        {
          "name": "lengthBound",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "alliance_abdicateFellowStatus",
      "params": []
    },
    {
      "name": "nominationPools_join",
      "params": [
        {
          "name": "amount",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "poolId",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "nominationPools_bondExtra",
      "params": [
        {
          "name": "extra",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/PalletNominationPoolsBondExtra"
          }
        }
      ]
    },
    {
      "name": "nominationPools_claimPayout",
      "params": []
    },
    {
      "name": "nominationPools_unbond",
      "params": [
        {
          "name": "memberAccount",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "unbondingPoints",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "nominationPools_poolWithdrawUnbonded",
      "params": [
        {
          "name": "poolId",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "numSlashingSpans",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "nominationPools_withdrawUnbonded",
      "params": [
        {
          "name": "memberAccount",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "numSlashingSpans",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "nominationPools_create",
      "params": [
        {
          "name": "amount",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "root",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "nominator",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "stateToggler",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        }
      ]
    },
    {
      "name": "nominationPools_createWithPoolId",
      "params": [
        {
          "name": "amount",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "root",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "nominator",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "stateToggler",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "poolId",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "nominationPools_nominate",
      "params": [
        {
          "name": "poolId",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "validators",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/array"
          }
        }
      ]
    },
    {
      "name": "nominationPools_setState",
      "params": [
        {
          "name": "poolId",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "state",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/PalletNominationPoolsPoolState"
          }
        }
      ]
    },
    {
      "name": "nominationPools_setMetadata",
      "params": [
        {
          "name": "poolId",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "metadata",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "array"
          }
        }
      ]
    },
    {
      "name": "nominationPools_setConfigs",
      "params": [
        {
          "name": "minJoinBond",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/PalletNominationPoolsConfigOpU128"
          }
        },
        {
          "name": "minCreateBond",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/PalletNominationPoolsConfigOpU128"
          }
        },
        {
          "name": "maxPools",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/PalletNominationPoolsConfigOpU32"
          }
        },
        {
          "name": "maxMembers",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/PalletNominationPoolsConfigOpU32"
          }
        },
        {
          "name": "maxMembersPerPool",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/PalletNominationPoolsConfigOpU32"
          }
        }
      ]
    },
    {
      "name": "nominationPools_updateRoles",
      "params": [
        {
          "name": "poolId",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "newRoot",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/PalletNominationPoolsConfigOpAccountId32"
          }
        },
        {
          "name": "newNominator",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/PalletNominationPoolsConfigOpAccountId32"
          }
        },
        {
          "name": "newStateToggler",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/PalletNominationPoolsConfigOpAccountId32"
          }
        }
      ]
    },
    {
      "name": "nominationPools_chill",
      "params": [
        {
          "name": "poolId",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "rankedPolls_submit",
      "params": [
        {
          "name": "proposalOrigin",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/KitchensinkRuntimeOriginCaller"
          }
        },
        {
          "name": "proposal",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/FrameSupportPreimagesBounded"
          }
        },
        {
          "name": "enactmentMoment",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/FrameSupportScheduleDispatchTime"
          }
        }
      ]
    },
    {
      "name": "rankedPolls_placeDecisionDeposit",
      "params": [
        {
          "name": "index",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "rankedPolls_refundDecisionDeposit",
      "params": [
        {
          "name": "index",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "rankedPolls_cancel",
      "params": [
        {
          "name": "index",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "rankedPolls_kill",
      "params": [
        {
          "name": "index",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "rankedPolls_nudgeReferendum",
      "params": [
        {
          "name": "index",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "rankedPolls_oneFewerDeciding",
      "params": [
        {
          "name": "track",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "rankedPolls_refundSubmissionDeposit",
      "params": [
        {
          "name": "index",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "rankedCollective_addMember",
      "params": [
        {
          "name": "who",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        }
      ]
    },
    {
      "name": "rankedCollective_promoteMember",
      "params": [
        {
          "name": "who",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        }
      ]
    },
    {
      "name": "rankedCollective_demoteMember",
      "params": [
        {
          "name": "who",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        }
      ]
    },
    {
      "name": "rankedCollective_removeMember",
      "params": [
        {
          "name": "who",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/MultiAddress"
          }
        },
        {
          "name": "minRank",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "rankedCollective_vote",
      "params": [
        {
          "name": "poll",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "aye",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "boolean"
          }
        }
      ]
    },
    {
      "name": "rankedCollective_cleanupPoll",
      "params": [
        {
          "name": "pollIndex",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "max",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "fastUnstake_registerFastUnstake",
      "params": []
    },
    {
      "name": "fastUnstake_deregister",
      "params": []
    },
    {
      "name": "fastUnstake_control",
      "params": [
        {
          "name": "uncheckedErasToCheck",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "messageQueue_reapPage",
      "params": [
        {
          "name": "messageOrigin",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/PalletMessageQueueMockHelpersMessageOrigin"
          }
        },
        {
          "name": "pageIndex",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        }
      ]
    },
    {
      "name": "messageQueue_executeOverweight",
      "params": [
        {
          "name": "messageOrigin",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/PalletMessageQueueMockHelpersMessageOrigin"
          }
        },
        {
          "name": "page",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "index",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "integer"
          }
        },
        {
          "name": "weightLimit",
          "description": "",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/SpWeightsWeightV2Weight"
          }
        }
      ]
    }
  ],
  "components": {
    "schemas": {
      "AccountId": {
        "name": "AccountId"
      },
      "BlockHash": {
        "name": "BlockHash"
      },
      "BlockNumber": {
        "name": "BlockNumber"
      },
      "bool": {
        "name": "boolean",
        "type": "boolean"
      },
      "Bytes": {
        "name": "Bytes",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/u8"
        }
      },
      "CodeUploadRequest": {
        "name": "CodeUploadRequest"
      },
      "ContractCallRequest": {
        "name": "ContractCallRequest"
      },
      "EthCallRequest": {
        "name": "EthCallRequest"
      },
      "EthFilter": {
        "name": "EthFilter"
      },
      "EthSubKind": {
        "name": "EthSubKind"
      },
      "EthSubParams": {
        "name": "EthSubParams"
      },
      "EthTransactionRequest": {
        "name": "EthTransactionRequest"
      },
      "Extrinsic": {
        "name": "Extrinsic"
      },
      "f32": {
        "name": "f32",
        "type": "number"
      },
      "f64": {
        "name": "f64",
        "type": "number"
      },
      "H160": {
        "name": "H160"
      },
      "H256": {
        "name": "H256"
      },
      "H64": {
        "name": "H64"
      },
      "Hash": {
        "name": "Hash"
      },
      "i128": {
        "name": "i128",
        "type": "integer"
      },
      "i16": {
        "name": "i16",
        "type": "integer"
      },
      "i32": {
        "name": "i32",
        "type": "integer"
      },
      "i64": {
        "name": "i64",
        "type": "integer"
      },
      "i8": {
        "name": "i8",
        "type": "integer"
      },
      "InstantiateRequestV1": {
        "name": "InstantiateRequestV1"
      },
      "Justification": {
        "name": "Justification"
      },
      "Option<Text>": {
        "name": "Text"
      },
      "Option<Vec<f64>>": {
        "name": "",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/f64"
        }
      },
      "PrefixedStorageKey": {
        "name": "PrefixedStorageKey"
      },
      "StorageKey": {
        "name": "StorageKey"
      },
      "StorageKind": {
        "name": "StorageKind"
      },
      "string": {
        "name": "string",
        "type": "string"
      },
      "Text": {
        "name": "string",
        "type": "string"
      },
      "u128": {
        "name": "u128",
        "type": "integer"
      },
      "u16": {
        "name": "u16",
        "type": "integer"
      },
      "U256": {
        "name": "U256"
      },
      "u32": {
        "name": "u32",
        "type": "integer"
      },
      "u64": {
        "name": "u64",
        "type": "integer"
      },
      "u8": {
        "name": "u8",
        "type": "integer"
      },
      "Vec<ExtrinsicOrHash>": {
        "name": "",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ExtrinsicOrHash"
        }
      },
      "Vec<H256>": {
        "name": "",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/H256"
        }
      },
      "Vec<StorageKey>": {
        "name": "",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/StorageKey"
        }
      },
      "Vec<u64>": {
        "name": "",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/u64"
        }
      }
    }
  }
}